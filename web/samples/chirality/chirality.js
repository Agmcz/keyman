KeymanWeb.KR(new Keyboard_chirality());

function Keyboard_chirality() {
    this.KI = "Keyboard_chirality";
    this.KN = "Development Chirality Test Keyboard";
    this.KV = {
        KMBM: 0x001F,
        F: ' 1em "Arial"',
        K102: 0,
        KLS: { 'default': new Array("`", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=", "", "", "", "q", "w", "e", "r", "t", "y", "u", "i", "o", "p", "[", "]", "\\", "", "", "", "a", "s", "d", "f", "g", "h", "j", "k", "l", ";", "'",  "", "", "", "", "", "", "z", "x", "c", "v", "b", "n", "m", ",", ".", "/", "", "", "", "", "", ""),
                 'shift': new Array("~", "!", "@", "#", "$", "%", "^", "&", "*", "(", ")", "_", "+", "", "", "", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "{", "}", "|",  "", "", "", "A", "S", "D", "F", "G", "H", "J", "K", "L", ":", "\"", "", "", "", "", "", "", "Z", "X", "C", "V", "B", "N", "M", "<", ">", "?", "", "", "", "", "", ""),
              'leftctrl': new Array("",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "", "", "",  "", "ʍ", "ə", "ɹ", "ð", "ʏ", "ʉ", "ɨ", "ɵ", "ʘ", "",  "",  "",   "", "", "", "ɑ", "ʃ", "",  "ɸ", "ɣ", "ɥ", "ɟ", "",  "ɬ", "ː", "",   "", "", "", "", "", "", "ʒ", "χ", "ç", "ʋ", "β", "ɲ", "",  "",  "",  "",  "", "", "", "", "", ""),
         'leftctrlshift': new Array("",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "", "", "", "ʡ", "",  "ɘ", "ʀ", "θ", "",  "ɯ", "ɪ", "",  "",  "",  "",  "",   "", "", "", "ɒ", "ᶘ", "",  "",  "ɢ", "ʜ", "",  "",  "ʟ", "ː", "",   "", "", "", "", "", "", "ᶚ", "",  "",  "",  "ʙ", "ɴ", "",  "",  "",  "ʔ", "", "", "", "", "", ""),
               'leftalt': new Array("",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "", "", "",  "", "", "ɛ", "ɽ", "ʈ", "ɥ", "ʊ", "",  "ɔ", "",  "",  "",  "",   "", "", "", "æ", "",  "ɖ", "",  "ɡ", "ɦ", "ʝ", "",  "ɭ", "",  "",   "", "", "", "", "", "", "ʐ", "",  "ɕ", "", "",  "ɳ", "",  "",  "",  "",  "", "", "", "", "", ""),
              'rightalt': new Array("",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "", "", "", "ʠ", "ɰ", "ɜ", "ɾ", "ƭ", "",  "ʌ", "",  "ø", "ƥ", "",  "",  "",   "", "", "", "ɐ", "σ", "ɗ", "",  "ɠ", "ħ", "ʄ", "ƙ", "ɮ", "",  "",   "", "", "", "", "", "", "ʑ", "",  "ƈ", "",  "ɓ", "ŋ", "ɱ", "",  "",  "",  "", "", "", "", "", ""),
          'leftaltshift': new Array("",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "", "", "", "ʢ", "",  "œ", "ɻ", "",  "",  "",  "ᵻ", "ɞ", "",  "",  "",  "",   "", "", "", "",  "",  "",  "",  "",  "",  "",  "",  "ʎ", "",  "",   "", "", "", "", "", "", "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "", "", "", "", "", ""),
         'rightaltshift': new Array("",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "", "", "", "",  "",  "ɶ", "ʁ", "",  "",  "ᵾ", "ᵼ", "ɤ", "",  "",  "",  "",   "", "", "", "ᴂ", "",  "",  "",  "ʛ", "ɧ", "",  "",  "ɺ", "",  "",   "", "", "", "", "", "", "",  "",  "",  "",  "",  "",  "",  "",  "",  "",  "", "", "", "", "", "")   
        }
    };
    this.KH = '';
    this.KM = 0;
    this.gs = function (t, e) {
        return 0; //this.g0(t, e);
    };
    this.g0 = function (t, e) {
        // var k = KeymanWeb, r = 0, m = 0;
        // if (k.KKM(e, 16480, 48)) {
            // r = m = 1;
            // k.KO(0, t, "໘");
        // } else if (k.KKM(e, 16480, 49)) {
            // r = m = 1;
            // k.KO(0, t, "໑");
        // } else if (k.KKM(e, 16480, 50)) {
            // r = m = 1;
            // k.KO(0, t, "໒");
        // } else if (k.KKM(e, 16480, 51)) {
            // r = m = 1;
            // k.KO(0, t, "໓");
        // } else if (k.KKM(e, 16480, 52)) {
            // r = m = 1;
            // k.KO(0, t, "໔");
        // } else if (k.KKM(e, 16480, 55)) {
            // r = m = 1;
            // k.KO(0, t, "໕");
        // } else if (k.KKM(e, 16480, 56)) {
            // r = m = 1;
            // k.KO(0, t, "໖");
        // } else if (k.KKM(e, 16480, 57)) {
            // r = m = 1;
            // k.KO(0, t, "໗");
        // } else if (k.KKM(e, 16480, 87)) {
            // r = m = 1;
            // k.KO(0, t, "໐");
        // } else if (k.KKM(e, 16384, 96)) {
            // r = m = 1;
            // k.KO(0, t, "0");
        // } else if (k.KKM(e, 16384, 97)) {
            // r = m = 1;
            // k.KO(0, t, "1");
        // } else if (k.KKM(e, 16384, 98)) {
            // r = m = 1;
            // k.KO(0, t, "2");
        // } else if (k.KKM(e, 16384, 99)) {
            // r = m = 1;
            // k.KO(0, t, "3");
        // } else if (k.KKM(e, 16384, 100)) {
            // r = m = 1;
            // k.KO(0, t, "4");
        // } else if (k.KKM(e, 16384, 101)) {
            // r = m = 1;
            // k.KO(0, t, "5");
        // } else if (k.KKM(e, 16384, 102)) {
            // r = m = 1;
            // k.KO(0, t, "6");
        // } else if (k.KKM(e, 16384, 103)) {
            // r = m = 1;
            // k.KO(0, t, "7");
        // } else if (k.KKM(e, 16384, 104)) {
            // r = m = 1;
            // k.KO(0, t, "8");
        // } else if (k.KKM(e, 16384, 105)) {
            // r = m = 1;
            // k.KO(0, t, "9");
        // } else if (k.KKM(e, 16384, 106)) {
            // r = m = 1;
            // k.KO(0, t, "*");
        // } else if (k.KKM(e, 16384, 107)) {
            // r = m = 1;
            // k.KO(0, t, "+");
        // } else if (k.KKM(e, 16384, 109)) {
            // r = m = 1;
            // k.KO(0, t, "-");
        // } else if (k.KKM(e, 16384, 110)) {
            // r = m = 1;
            // k.KO(0, t, ".");
        // } else if (k.KKM(e, 16384, 111)) {
            // r = m = 1;
            // k.KO(0, t, "/");
        // } else if (k.KKM(e, 16480, 187)) {
            // r = m = 1;
            // k.KO(0, t, "€");
        // } else if (k.KKM(e, 16480, 189)) {
            // r = m = 1;
            // k.KO(0, t, "໙");
        // } else if (k.KKM(e, 16480, 192)) {
            // r = m = 1;
            // k.KO(0, t, "₭");
        // } else if (k.KKM(e, 16480, 219)) {
            // r = m = 1;
            // k.KO(0, t, "[");
        // } else if (k.KKM(e, 16480, 221)) {
            // r = m = 1;
            // k.KO(0, t, "]");
        // }
        // if (!m && k.KIK(e)) {
            // r = this.g1(t, e);
        // }
        // return r;
    };
    // this.g1 = function (t, e) {
        // var k = KeymanWeb, r = 0, m = 0;
        // if (k.KKM(e, 16400, 49)) {
            // r = m = 1;
            // k.KO(0, t, "1");
        // } else if (k.KKM(e, 16400, 222)) {
            // r = m = 1;
            // k.KO(0, t, "=");
        // } else if (k.KKM(e, 16400, 51)) {
            // r = m = 1;
            // k.KO(0, t, "3");
        // } else if (k.KKM(e, 16400, 52)) {
            // r = m = 1;
            // k.KO(0, t, "4");
        // } else if (k.KKM(e, 16400, 53) && k.KCM(1, t, "ຳ", 1)) {
            // r = m = 1;
            // k.KO(1, t, "໌");
        // } else if (k.KKM(e, 16400, 53) && k.KA(0, k.KC(1, 1, t), this.s22)) {
            // r = m = 1;
            // k.KB(t);
        // } else if (k.KKM(e, 16400, 53) && k.KA(0, k.KC(1, 1, t), this.s18)) {
            // r = m = 1;
            // k.KB(t);
        // } else if (k.KKM(e, 16400, 53) && k.KA(0, k.KC(1, 1, t), this.s20)) {
            // r = m = 1;
            // k.KB(t);
        // } else if (k.KKM(e, 16400, 53) && k.KA(0, k.KC(1, 1, t), this.s24)) {
            // r = m = 1;
            // k.KB(t);
        // }
        // return r;
    // };
}